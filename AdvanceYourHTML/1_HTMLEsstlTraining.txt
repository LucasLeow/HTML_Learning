Intro to HTML

	Conduit for:
		- words
		- images
		- video
		- audio
		- forms
		- interactive experiences
		
-- 1 HTML --
-- 1-1 Role of HTML --
	- Hypertext Markup Language
		- Defines the  content (structure) of a site to the browser
			- i.e let the browser know what is ur intention for the content placement
	- No programming logic / loops / functions
	- declarative (markup) language
	
-- 2 Formatting Text --

-- 2-1 Syntax of HTML elements (tags) --
	- <p> </p> (opening / closing tags)
		- not all elements have closing tags
	- syntax is straightforward
	- tricky part is knowing which to use at where
	- elements can be nested within each other
		- nesting forms a tree structure (parents children siblings etc.)
		- known as the Document Tree (DOM)

	DOM Tree:
		- Document Object Model
		- Hierarchy & structure of HTML elements
		- used for targetting elements in CSS & JS
		- Browser use DOM tree to create Accessibility tree
		
	eg.
	
		<article>
			<h1> This is the headline </h1>
			<p> The first paragraph </p>
			<p> The second paragraph </p>
			<p> The third paragraph which has <em> emphasized text here </em> </p>
		</article>
		
-- 2-3 Headlines --
	- <h1> to <h6>
	- when to use which is more important
		Title: h1
		Subcontent-title: h2
		Misc content: h3
		
	- most organization already have design specs for site's title to follow
	- important to distinguish different headers to make site more accessible as well
	
-- 2-4 Bold & Italics --

	- 2 for bold
	- 2 for italic
	
		2 types for: (For web accessibility, especially when using screen reader)
		
			- visually distinguished <i> / <b>
				- For items of importance
					- title of article
					- title of show
					- authors of books
					
			- verbally emphasized <em> / <strong>
				- describing things of emphasis
					- favourite object
					- most important things
					- meeting deadline etc.
					
	* Both will look similar on page but sound different when user use screen reader
	* If simply want to bold something, can just use CSS and assign font weight
		- <b> or <i> or <em> or <strong> is used to indicate to web that something is of importance
		- recommendation is use as last resort
		
-- 2-5 Lists --
	- can be used to make:
		- dropdown menus
		- nav bar
		- article cards with images

	- Unordered list
		<ul>
			<li>Item 1</li>
			<li>Item 2</li>
			<li>Item 3</li>
		</ul>
		
	- Ordered list
		<ol>
			<li>Item 1</li>
			<li>Item 2</li>
			<li>Item 3</li>
		</ol>
		s
	- Definition list
		- key-value pair
		<dl>
			<dt> term 1 (key 1) </dt>
			<dd> definition 1 </dd>
			<dd> Additional definition </dd>
			
			<dt> term 2 (key 2) </dt>
			<dd> definition 2 </dd>
			<dd> Additional definition </dd>
		</dl>

-- 2-6 Quote tags -- 
	<q> & <blockquote>
	
	<q> : inline quote
	<blockquote> : block quote
	
	- for use when quoting someone
	
	<blockquote>
		<p> content </p>
		<cite>-Author name </cite>
	</blockquote>
		- block element
	
	<q> tags: used when someone is have dialogue or quoting something
		- tailor to each region language
	Jeremy said <q> You live to fight another day </q>
		- inline element


-- 2-7 Dates & Times --

	<time> May 8 </time>
	<time> May 8, 2025 </time>
	
	<time datetime="2025-05-08"> May 8, 2025 </time>
		- datetime attribute must be "YYYY-MM-DD" format
		- datetime attribute for time is 24H format
			- eg: datetime="15:45-05:00" (15:45 in -5 GMT)
		- machine readable convention
		
	- most sites use timestamps instead of dates
	
		<time datetime="2021-20-05">2 days ago</time>
		<time datetime="20:15-05:00">5 hours ago</time>
		<time datetime="2020-11-04T19:00"> Wednesday, Nov 4th at 7pm </time>
		<time datetime="2020-11-04 19:00-0500"> Wednesday, Nov 4th at 7pm </time>
		
-- 2-8 Code, pre, br tags --
	- putting code in webpage
	
	<code> {color:green;} </code>
		- style changes for content between code tags
	
	HTML entities (there are a whole bunch available)
		- &lt; will give '<'
		- &gt; will give '>'
			* Can write HTML tags as content
			
		eg. <code>&lt;h4&gt; </code> (shows <h4> in content)
		
	- <br> : to give breakspace
	- <pre> : preserve linespace & indentation of HTML content
	
		eg.
		<pre> <!-- Preserves Whitespaces & indentations -->
		This
			Content
					Will
							Show
				Like this				
													
		in Webpage
		</pre>
		
-- 2-9 subscripts, superscripts, small-text --
	<sub></sub>
	<sup></sup>
	
	
	<small></small> : To convey something that has little prominence
		- If want to simply make text smaller, use CSS
		- <small> helps with web accessibility
		eg: Fine print at bottom of page
			- copyright logo etc.
			- cannot leave out but not important
		
		
-- 3 Power of HTML --

-- 3-2 HTML Attributes --
	
	- Global Attributes: Attributes applicable to any HTML element
		- class : For CSS Styling (multiple elements possible)
		- id : Unique (only for 1 element)
			- for JS / Page navigation
		- contenteditable="true"/"false" : Allow user to edit page content
		- lang="en-GB" : Language
		- dir="ltr"/"rtl" : left to right or right to left
	
-- 3-3 ARIA roles --

	- Also a global attribute (applicable to any element)
	- attribute that provides accessible information about specific element
		- provides info for:
			- screen readers
			- braille displays
			- magnifiers
			- assitive technology
	- Quite a complex topic, worth looking into to make webpage more accessible
			
	Accessibility Tree:
		- Built from the DOM tree
		- HTML content -> DOM tree -> Accessibility tree
		
			- aria-label : content to be read by assitive tech
			- aria-hidden="true" : remove content & its children from accessibility tree
				- only h1 can be seen in eg below, the rest are hidden
		
		<h1 aria-label="Hello">
			<div class="grid" aria-hidden="true">
				<span>H</span>
				<span>E</span>
				<span>L</span>
				<span>L</span>
				<span>O</span>
			</div>

-- 3-4 HTML Formatting --

	1) HTML ignores whitespaces, indentations, returns
		- unless specific tags used
			- <pre>
			- <code>
			- <textarea>
			
	2) HTML comments: <!-- This is a comment -->
	
	3) <P> & <p> is the same. Uppercase was used in older versions / browsers
		- new convention is lowercase
	
	4) shorter elements invented in the past, where memory matters
		- longer elements make code more readable & understandable. memory doesnt matter
		
	5) tags may not always have closing tag
		- <img src=url/> : No closing tag (invented in the past)
		- newer tags always have closing tags
		
	HTML Entities:
		- to help display content that looks like HTML elements
		
		eg:
		< : &lt;
		> : &gt;
		& : &amp;
		
		&copy; : Copyright symbol
		&trade; : TM symbol
		&star; : star symbol
		
		Jen&nbsp;Simmons <- Jen Simmons will always stay together on same line
			- can also be used to create " ".
			- Jen  Simmons will not be processed by browser
			- Jen nbsp;nbsp; Simmons will show the 2 whitespace
		
-- 4 Links in HTML --

-- 4-1 Links --
	- Anchor tag:
		- <a href="page.html">Link name on page</a>
			- href: hypertext reference
			- in-line element
			
	- Can put image as clickable link:
	
		<a href="http:google.com">
			<img src="googlelogo.png"/>
		</a>
		
		Absolute URL:
			- Pointing to a point in web
			- must include http:// / https://
				- Hypertext Transfer Protocol (Secure) https
				
-- 4-2 URL paths --

	Relative URL:
		* Relative to the current file we are writing the path in
		
		eg:
			- /about
			- /purchases
			- /about/contact
			- ./blog/march-9.html (./ means current directory)
			
		* URLs affect SEO
		
-- 4-3 Navigation --

	- most common technique for creating menu / navbar
	- using <nav></nav< element
		- for marking up navigation
		- tells browser which sets of links are part of site navigation
		
		
		<nav role="navigation" aria-label="main menu">
			- ARIA role for main navigation for site
			
			
		<footer></footer>
			- Privacy Policy
			- Terms of Service
			- Contact us

-- 5 Images --

-- 5-1 Images -- 
	<img src=url alt="description" width="400" height="300"/>
		- src
		- alt: sub for img when img cannot be seen
		- width (px implied)
		- height
			- tell browser how large img is, making it load faster
			
-- 5-2 img file format --
	- Goal: High Quality + Lowest file size
		- .gif: 
			- larges areas of single color
			- limited color space : 256 colors
			- can have multiple frames for small movies
			
		- .svg (scalable vector graphics) (actl a programming language for graphics)
			- good for logos, icons 
			- vector file
			- instructions for a drawing
			- can be scaled large / small without losing quality
			- makes file size very small
			
		- .jpg
			- good for compressing photographs
			- can pick balance between size & quality
		
		- .png
			- newer format for web than gis & jpg
			- good for photos that need transparency

-- 5-3 Responsive images --

	- based on different devices
	- high resolution data consumes more data bandwidth
	- mobile phone vs large high res desktop
	
	
	Solution:
		- have multiple of same image in different resolution
		- browser will select image accordingly based on
			- data bandwidth
			- screen size
			- internet speed 
			etc.
			
			
		<img src = "default" alt="description" width="480" height="360"
		
		srcset="res1_image, res2_image, res3_img"
		sizes="(max-width: 480px) 240px,
		(max-width: 960px) 480px"

		/>
		
	- srcset attribute: A bunch of URL that links to same image of different resolution
	- "sizes" attribute: how much of viewport width to show img, after given breakpoints


-- 5-5 Responsive picture --
	- To show different parts of a picture based on viewport
	- using picture tag
	
	<picture>
		<source media="(min-width:600px)" srcset="enlarge.url"
		<source srcset="cropped.url"
		<img src="original.url" alt="description" width="480" height="360/>
	</picture>
	
* Downside: Must download all img specified in the srcset
	- wastage of memory
* typically 1 large image upload then picture resized accordingly
	
-- 5-6 Figures & Figcaption -- 

	<figure>
		<img src="img.url" alt="description" height="480" width="360"/>
		<figcaption>A blackdog sunbathing</figcaption>
	</figure>
	
	- provides semantic info for browser
		- improves accessibility
		- improves SEO (r/s b/w caption & img) (keywords)

-- 6 Media --

-- 6-1 Audio --
	<audio></audio> to put audio in webpage (audio player interface)
		- has open & close tag
	
	<audio src="audio-url" controls></audio> 
		- controls attribute provides built-in control 
		- loop attribute: auto replay
		- autoplay attribute: plays automatically when browser loads
			- not all ppl like autoplaying
			
		<audio> /
			<source src="audio.ogg" type="audio/ogg"/>
			<source src="audio.mp3" type="audio/mpeg"/>
		</audio>
			- allow to put in multiple source, let browser choose suitable format
			- browser choose first file it understands
			
		Types of audio formats:
			- mp3
			- ogg
			- wav
			
-- 6-2 Video --
	<video></video> tag
	
	<video src="videourl" controls></video>
	
	- h.264 codec: Widest support across all browser
		- not opensource
		- fees to use
		- but widely used
		
		
		- have bunch of video codecs supported
			- Real Video
			- Sorenson
			- Windows Media
			- FLV
			- H.263
			
	<video>
		<source src="videourl.webm" type="video/webm"/>
		<source src="videourl.mp4" type="video/mp4"/>
	</video>
		- browser will play first file it understands
		
	Adaptive Bitrate Streaming
		- video resolution changes based on internet bandwidth / speed
		- complicated, requires server farm of transcoding robots
	
	* Therefore, typically <video> tag not used. Typically, utilize embedded video from video hosting service 
		- eg <iframe>